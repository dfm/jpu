name: Tests

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
  workflow_dispatch:

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        nox-session:
          - "tests"
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"

        include:
          - nox-session: "doctest"
            python-version: "3.10"

    runs-on: ubuntu-latest
    steps:
      - name: "Init: checkout"
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: "Init: Python"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Install: dependencies"
        run: |
          python -m pip install -U pip
          python -m pip install -U nox

      - name: "Tests: run"
        run: python -m nox --non-interactive -s "${{ matrix.nox-session }}"

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -U build twine
      - name: Build the distribution
        run: python -m build .
      - name: Check the distribution
        run: python -m twine check --strict dist/*
      - uses: actions/upload-artifact@v4
        with:
          path: dist/*

  publish:
    environment:
      name: pypi
      url: https://pypi.org/p/jpu
    permissions:
      id-token: write
    needs: [tests, build]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v5
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@v1.12.4
